{"version":3,"sources":["components/Key.js","components/Keyboard.js","components/Trainer.js","pages/Terms.js","pages/Imprint.js","App.js","serviceWorker.js","index.js"],"names":["Key","style","border","backgroundColor","this","props","keyy","pressed","width","height","display","className","paddingLeft","paddingTop","primary","React","Component","Keyboard","handleKeyUp","event","handleKey","handleKeyDown","code","key","charCodeAt","length","newRows","state","rows","map","row","localeCompare","undefined","sensitivity","setState","onCharacter","console","log","onKeyDown","onKeyUp","tabIndex","textAlign","fontSize","maxWidth","borderRadius","Trainer","char","expectedChars","charAt","substring","textStyle","cursorStyle","whiteSpace","overflow","textOverflow","paddingBottom","fontWeight","animation","Terms","Fragment","Imprint","to","App","color","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.337f2857.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Key extends React.Component {\n    render() {\n        return (\n            <div style={{\n                border: '1px solid #DDD',\n                backgroundColor: this.props.keyy.pressed ? '#344a93' : '#272734',\n                width: (this.props.keyy.width || 1) * 64 + 'px',\n                height: (this.props.keyy.height || 1) * 64 + 'px',\n                display: \"flex\"\n            }} className=\"Key\">\n                <div style={{\n                    paddingLeft: '10px',\n                    paddingTop: '4px'\n                }}>{this.props.keyy.display || this.props.keyy.primary}</div>\n            </div>\n        );\n    }\n}\n\n\nKey.propTypes = {\n    keyy: PropTypes.shape({\n        primary: PropTypes.string,\n        width: PropTypes.number,\n        height: PropTypes.number,\n        display: PropTypes.string,\n        pressed: PropTypes.bool\n    })\n};\n\n\nexport default Key;\n","import React from 'react';\nimport Key from './Key'\nimport PropTypes from \"prop-types\";\n\nclass Keyboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rows: [\n                [\n                    {primary: 'Dead', display: '^'},\n                    {primary: '1'},\n                    {primary: '2'},\n                    {primary: '3'},\n                    {primary: '4'},\n                    {primary: '5'},\n                    {primary: '6'},\n                    {primary: '7'},\n                    {primary: '8'},\n                    {primary: '9'},\n                    {primary: '0'},\n                    {primary: '-'},\n                    {primary: '`'},\n                    {primary: 'Backspace', display: '⟵', width: 1.8}\n                ],\n                [\n                    {primary: 'Tab', display: '↹', width: 1.4},\n                    {primary: 'X'},\n                    {primary: 'V'},\n                    {primary: 'L'},\n                    {primary: 'C'},\n                    {primary: 'W'},\n                    {primary: 'K'},\n                    {primary: 'H'},\n                    {primary: 'G'},\n                    {primary: 'F'},\n                    {primary: 'Q'},\n                    {primary: 'ẞ'},\n                    {primary: '´'},\n                ],\n                [\n                    {primary: 'AltGraph', display: 'M3', width: 1.8},\n                    {primary: 'U'},\n                    {primary: 'I'},\n                    {primary: 'A'},\n                    {primary: 'E'},\n                    {primary: 'O'},\n                    {primary: 'S'},\n                    {primary: 'N'},\n                    {primary: 'R'},\n                    {primary: 'T'},\n                    {primary: 'D'},\n                    {primary: 'Y'},\n                    {primary: 'AltGraph', display: 'M3'},\n                ],\n                [\n                    {primary: 'Shift', display: 'M2', width: 1.3},\n                    {primary: 'AltGraph', display: 'M4'},\n                    {primary: 'Ü'},\n                    {primary: 'Ö'},\n                    {primary: 'Ä'},\n                    {primary: 'P'},\n                    {primary: 'Z'},\n                    {primary: 'B'},\n                    {primary: 'M'},\n                    {primary: ','},\n                    {primary: '.'},\n                    {primary: 'J'},\n                    {primary: 'Shift', display: 'M2', width: 2.5},\n                ],\n                [\n                    {primary: 'Control', display: 'Strg', width: 1.8},\n                    {primary: 'Alt', width: 1.8},\n                    {primary: ' ', width: 7.85},\n                    {primary: 'AltGraph', display: 'M4', width: 1.8},\n                    {primary: 'Control', display: 'Strg', width: 1.8}\n                ]\n            ],\n        };\n    }\n\n    handleKeyUp = (event) => this.handleKey(event, false)\n    handleKeyDown = (event) => this.handleKey(event, true)\n    handleKey = (event, pressed) => {\n        const code = event.key.charCodeAt(0)\n        if ((event.key.length === 1 &&\n            (code === 32 || code === 44 || code === 46 || code === 59 || code === 63 || code === 33 || // space, comma, period, semicolon, questionmark, exclamationmark\n                code === 220 || code === 214 || code === 196 || code === 223 || code === 7838 || code === 228 || code === 246 || code === 252 || // german umlauts\n                (code > 47 && code < 58) || // nummeric\n                (code > 64 && code < 91) || // upper alpha (A-Z)\n                (code > 96 && code < 123)))) { // lower alpha (a-z)\n\n            const newRows = this.state.rows.map(row => (\n                row.map(key => key.primary.localeCompare(event.key, undefined, {sensitivity: 'accent'}) === 0 ? {\n                    ...key,\n                    pressed: pressed\n                } : key)\n            ))\n            this.setState({rows: newRows});\n            this.props.onCharacter(event.key)\n        }\n        console.log(event.key.length + \"    \" + event.key + \"    \" + code)\n    }\n\n    render() {\n        return (\n            <div className=\"Keyboard\"\n                 onKeyDown={this.handleKeyDown}\n                 onKeyUp={this.handleKeyUp}\n                 tabIndex={-1}\n            style={{textAlign: 'center'}}>\n                <p style={{fontSize: '16px'}}>Click on the virtual keyboard, then start typing!</p>\n                <div style={{\n                    border: '8px solid #DDD',\n                    maxWidth: '972px',\n                    width: '972px',\n                    borderRadius: '12px',\n                    backgroundColor: '#272734'\n                }}>\n                    {this.state.rows.map(row => (\n                        <div className=\"KeyboardRow\" style={{display: 'flex'}}>\n                            {row.map(key => (\n                                <Key keyy={key}/>\n                            ))}\n                        </div>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nKeyboard.propTypes = {\n    onCharacter: PropTypes.func\n};\n\nexport default Keyboard;\n\n// FIXME Wir capture nicht nur das initiale runterdrücken der tasten, sondern dauerhaft input solange die Taste gedrückt ist...","import React from 'react';\nimport Keyboard from \"./Keyboard\";\n\nclass Trainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expectedChars: \"Neo ist eine ergonomische Tastaturbelegung, welche für die deutsche Sprache optimiert ist.\"\n        };\n    }\n\n    onCharacter = (char) => {\n        if (this.state.expectedChars.length > 0 && this.state.expectedChars.charAt(0) === char) {\n            this.setState({expectedChars: this.state.expectedChars.substring(1)})\n            console.log(\"YEAH!!!!\" + char)\n        } else {\n            // do something to indicate error\n            console.log(char)\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Trainer\" style={{maxWidth: '975px'}}>\n                <h3 style={textStyle}><span\n                    style={cursorStyle}>|</span>{this.state.expectedChars}</h3>\n                <style>{`\n            @keyframes \"blink\" {\n    from, to {\n        opacity: 0;\n    }\n    50% {\n        opacity: 100;\n    }\n}\n        `}</style>\n                <Keyboard onCharacter={this.onCharacter}/>\n            </div>\n        );\n    }\n}\n\nconst textStyle = {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    paddingBottom: '40px'\n};\n\nconst cursorStyle = {\n    fontWeight: '100',\n    animation: '1s blink step-end infinite'\n}\n/*\n@keyframes \"blink\" {\n    from, to {\n        color: transparent;\n    }\n    50% {\n        color: black;\n    }\n}*/\n\nexport default Trainer;\n","import React from 'react';\n\nexport default function Terms() {\n    return (\n        <React.Fragment>\n            About Page\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nexport default function Imprint() {\n    return (\n        <React.Fragment>\n            <h3><Link to=\"/\">Zurück</Link></h3>\n            <p>\n                1. Three must-haves: Copyright, Privacy Policy, and Terms of Use\n\n                These three sections of content are essential for any website. They are necessary for legal protection.\n\n                Copyright: The year and the copyright symbol will protect your website from plagiarism.\n\n                Privacy Policy: Explains how you will use and protect your visitors’ personal data and other\n                information.\n\n                Terms of Use: Offers general rules and guidelines governing the use of the site and/or products.\n            </p>\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Link, Route, Switch} from 'react-router-dom';\nimport Trainer from \"./components/Trainer\";\nimport Terms from \"./pages/Terms\";\nimport Imprint from \"./pages/Imprint\";\n\nexport default function App() {\n    return (\n        <Router>\n            <React.Fragment>\n                <div className=\"App\">\n                    <h2 style={{paddingBottom: '100px'}}><Link style={{color: 'white'}} to=\"/\">Neo\n                        Touch Typing Tutor</Link></h2>\n                    <Switch>\n                        <Route exact path=\"/\" component={Trainer}/>\n                        <Route path=\"/terms\" component={Terms}/>\n                        <Route path=\"/imprint\" component={Imprint}/>\n                    </Switch>\n                </div>\n                <footer className=\"Footer\">\n                    © Copyright 2020 Nils Schmidt&nbsp;|&nbsp;<Link to=\"/imprint\">Impressum</Link>&nbsp;|&nbsp;<Link\n                    to=\"/terms\">Datenschutz</Link>\n                </footer>\n            </React.Fragment>\n        </Router>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}